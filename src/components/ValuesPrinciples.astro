---
const {data, linkTheme} = Astro.props
console.log("Theme:", data)
import cardContent from "@data/coreValues.json";
import SectionTitle from "./utilityComp/sectionTitle.astro";
import LinkButton from "./utilityComp/LinkButton.astro";
import { Image } from "astro:assets";
// import your icons
import layers from "@icons/layers.svg";
import bars from "@icons/bars.svg";
import globe from "@icons/globe.svg";
import gear from "@icons/gear.svg";

// create a mapping object
const icons = {
  layers,
  bars,
  globe,
  gear,
};
---
<div class="full-bleed" data-theme={data} >
    <div class="content content-padding">
        <SectionTitle data={data} overTitle="Growing with our Clients" title={cardContent.title} subtitle={cardContent.subtitle}/>
        <LinkButton data={linkTheme} url={cardContent.button.link} text={cardContent.button.text} />
    </div>
    <div class="content-padding wrap">
        <ul>
            {
                cardContent.values.map((card) => {
                const Icon = icons[card.icon];
                return (
                <li>
                <div class="psedo"><Icon class="img" /></div>
                <h3>{card.title}</h3>
                <p>{card.description}</p>
                <a href={card.link.url}>{card.link.text} &#x2192;</a>
            </li>
                );
                })
            }
        </ul>
    </div>
</div>

<style>
    .full-bleed {
        background-color: var(--back-col);
        padding-block: var(--margin-space);
        margin-bottom: var(--margin-space);

    }
    .wrap {
        container-type: inline-size;
    }
    .content {
        display: grid;
        grid-template-columns: 2fr 1fr;
        > :nth-child(1) {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            p {
                color: var(--color);
            }
            h1 {
                text-wrap: balance;
                color: var(--color);
                font-size: var(--step-5);
            }
            h1 + p {
                margin-top: 1rem;
            }
            @container (width < 700px) {
                padding-inline: calc(15% - 1rem);
            }
        }
    }
    ul {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 2rem;
      padding: 0;
      margin-top: 2rem;
    @container (width < 1100px) {
        grid-template-columns: repeat(2, 1fr);
    }
        @container (width < 650px) {
        grid-template-columns: 1fr;
    }
       li {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        list-style: none;
        scroll-snap-align: center;
        height: fit-content;
        background-color: var(--white);
        border-radius: var(--border-radius);
        padding: 30px;
      p {
      color: var(--black);
      }
      h3 {
        font-size: var(--step-1);
        color: var(--black);
      }
      }
      a {
        color: var(--black);
        font-weight: bold;
        transition: color 0.2s ease-in;
        &:hover {
            color: var(--yellow);
        }
      }
    }
  .img {
    width: 60%;
    color: var(--white);
   }
    .psedo {
        border:3px solid var(--black) ;
        background-color: var(--black);
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 52px;   /* control circle size */
        height: 52px;
    }
        [data-theme="Light"] {
        --back-col: var(--light);
        --color: var(--black);
        }
        [data-theme="Dark"] {
        --back-col: var(--black);
        --color: var(--white);
        }

</style>