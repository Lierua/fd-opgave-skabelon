---
import ScrollingContainer from "./ScrollingContainer.astro";
import Content from "@data/financialProjections.json"
import ArrowRight from "@icons/arrow--right.svg";
import ArrowLeft from "@icons/arrow-left.svg";
---

<div class="full-bleed">
      <section>
        <div class="header">
          <div>
            <h1>{Content.title}</h2>
            <p>
              {Content.subtitle}
            </p>
          </div>
          <div class="arrows">
            <a id="scrollLeft" class="scroll-btn"><ArrowLeft class="img" /></a>
            <a id="scrollRight" class="scroll-btn"><ArrowRight class="img" /></a>
          </div>
        </div>

        <ScrollingContainer/>
      </section>
</div>


<style>
  section {
    padding-block: var(--margin-space);
    scroll-snap-type: x mandatory;
    display: grid;
    grid-template-columns: 1fr minmax(0, var(--content-width)) 1fr;
    background-color: var(--light-gray);
  > * + * {
    margin-block-start: 3rem;
  }
    > * {
    grid-column: 2;
  }
  .header {
    align-self: start;
    display: grid;
    grid-template-columns: 1fr 1fr;
    @media (width < 1200px) {
      padding-inline: 1rem;
    }

    h1 {
        font-weight: 600;
        font-size: var(--step-5);
        margin-bottom: 1rem;
    }
    .arrows {
        margin-left: auto;
        align-self: flex-end;
        display: flex;
        gap: 2rem;
        #scrollLeft {
          &:hover {
            .img {
              color: var(--black);
            }
          }
        }
        #scrollRight {
          &:hover {
            .img {
              color: var(--black);
            }
          }
        }
      .img {
          color: var(--white);
          transition: color 0.2s ease-in;
      }
      a {
          background-color: var(--black);
          border:4px solid var(--black) ;
          border-radius: 50%;
          display: inline-flex;
          align-items: center;
          justify-content: center;
          width: 52px;
          height: 52px;
          transition: background-color 0.2s ease-in, border 0.2s ease-in;
          &:hover {
            background-color: var(--yellow);
            border:5px solid var(--yellow) ;
          }
      }
    }
  @media (width < 700px) {
      display: flex;
      gap: 3rem;
      flex-direction: column;
      .arrows {
        margin-left: 0;
        align-self: flex-start;
      }
    }
  }
    ul {
      padding: 0 0 2rem 0;
      padding-inline:max(1rem, 50% - var(--content-width) / 2);
      grid-column: 1/-1;
      display: flex;
      gap: 2rem;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      scroll-padding-inline: max(1rem, calc(50% - var(--content-width) / 2));
       li {
      flex: 0 0 377px;
      scroll-snap-align: center;
      }
      > :nth-child(2) {
      background-color: var(--black);
      color: var(--yellow);
          p {
        color: var(--white);
        }
        h3 {
            color: var(--white);
        }
    }
    }
  }
</style>

<script>
const scrollBox = document.getElementById('scrollBox');
const scrollLeft = document.getElementById('scrollLeft');
const scrollRight = document.getElementById('scrollRight');

function scrollContainer(direction) {
  scrollBox.scrollBy({ left: direction * 200, behavior: 'smooth' });
}

scrollLeft?.addEventListener('click', () => scrollContainer(-1));
scrollRight?.addEventListener('click', () => scrollContainer(1));


</script>