---
//@ts-nocheck
import DynamicImage from "@components/helpers/DynamicImage.astro";
import caseStudy from "@data/caseStudy.json";
import LinkButton from "@components/utilityComp/LinkButton.astro"
const { caseName, category, date, image, buttonLabel} = caseStudy.caseDetails;
---

<article>
  <header>
    <DynamicImage imagePath={image} altText={caseName} />
    <div class="wrap">
      <div class="case-details">
        <dl>
          <div>
            <dt>Case Name</dt>
            <dd>{caseName}</dd>
          </div>
          <div>
            <dt>Category</dt>
            <dd class="category">{category}</dd>
          </div>
          <div>
            <dt>Date</dt>
            <dd class="date">{date}</dd>
          </div>
        </dl>
        <LinkButton data="yellow" url="#" text={buttonLabel} />
      </div>
    </div>
  </header>
  <div class="content">
  {
    caseStudy.sections.map((section) => (
      <section>
        {caseStudy.sections[0] === section ? (
          <h1>{section.title}</h2>
        ) : (
          <h2>{section.title}</h3>
        )}

        {Array.isArray(section.content) ? (
          <>
            {section.content.map((item) => (
              <p>{item}</p>
            ))}
          </>
        ) : (
          <p>{section.content}</p>
        )}
        {section.highlights && (
          <ul>
            {section.highlights.map((highlight) => (
              <li>{highlight}</li>
            ))}
          </ul>
        )}
        {section.image && (
          <DynamicImage
            imagePath={section.image}
            altText={section.title}
            width={600}
            height={400}
          />
        )}
      </section>
    ))
  }
  </div>
</article>

<style>
  header {
    img {
      border-radius: var(--border-radius);
      
    }
    .wrap  {
      display: grid;
      grid-template-columns: 1fr minmax(0, 1000px) 1fr;
    }
    .case-details {
      grid-column: 2;
      margin-top: -3rem;
      display: flex;
      justify-content: space-between;
      background-color: var(--black);
      border-radius: var(--border-radius);
      padding: 55px;
      dl {
        gap: 6rem;
        display: flex;
        grid-column: 2;
      }
      div {
       display: flex;
       flex-direction: column;
       gap: 1rem;
       dt {
        font-size: 1.2rem;
        font-weight: 600;
         color: var(--white);
        }
        dd {
          color: var(--white);
        }
      }
    }
    .button {
        height: fit-content;
        font-weight: 600;
        color: var(--gray);
        transition: background-color 0.2s ease-in;
        padding: 15px 30px;
        border-radius: 100px;
        background-color: var(--yellow);
        z-index: 1;
    }
    .button:hover {
        background-color: var(--white);
    }
    @media (width < 1050px) {
      img {
        min-height: 385px;
      }
    }
    @media (width < 880px) {
      .case-details {
        margin-inline: auto;
        max-width: 600px;
        padding: 30px;
        gap: 3rem;
        flex-direction: column;
        dl {
          gap: 2rem;
          justify-content: space-between;
        }
        a {
          margin: 0 auto;
        }
      }
    }
  }
  .content {
    margin-bottom: var(--margin-space);
    display: grid;
    grid-template-columns: 1fr minmax(0, 800px) 1fr;
    h2 {
      font-weight: 600;
    }
    > * {
      grid-column: 2;
      margin-block-start: 2rem;
      li {
        margin-block-start: 1.5rem;
      }
      img {
        width: 90%;
        height: 365px;
        margin: 0 auto;
        margin-block-start: 2rem;
            animation: parallax linear both;
            animation-timeline: view();
      }
      p {
        margin-block-start: 1rem;
      }
      h2 + p {
        margin-block-start: 2rem;
      }
    }
  }
</style>
